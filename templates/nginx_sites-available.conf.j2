# {{ ansible_managed }}
# Manual customization of this file is not recommended.
upstream {{ nginx_upstream_name }} {
  server {{ nginx_upstream_server }};
}

{% if nginx_ssl %}
map $scheme $sts {
  https "max-age={{ nginx_ssl_strict_transport_header_age }}; includeSubdomains;";
}
{% endif %}

{% if (nginx_base_redirect_to_www) %}
server {
  listen {{ nginx_listen }};
  server_name {{ nginx_base_domain }};
  return 301 $scheme://www.{{ nginx_server_name }}$request_uri;
}
{% endif %}

{% if nginx_ssl %}
{% if (nginx_server_redirect_to_ssl) %}
server {
  listen {{ nginx_listen }};
  server_name {{ nginx_server_name }};
  return 301 https://{{ nginx_server_name }}$request_uri;
}
{% endif %}
{% endif %}

server {
  listen {{ nginx_listen }};
{% if nginx_ssl %}
  listen {{ nginx_listen_ssl }} ssl{{ ' spdy' if nginx_spdy_enabled else ''}};
{% endif %}
  server_name {{ nginx_server_name }};
  root {{ nginx_root_path }};

{% if nginx_ssl %}
  ssl_certificate /etc/nginx/ssl/{{ nginx_ssl_cert_name }};
  ssl_certificate_key /etc/nginx/ssl/{{ nginx_ssl_key_name }};
  ssl_session_cache {{ nginx_ssl_session_cache }};
  ssl_session_timeout {{ nginx_ssl_session_timeout }};
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers {{ nginx_ssl_ciphers }};
  ssl_ecdh_curve {{ nginx_ssl_ecdh_curve }};
  add_header Strict-Transport-Security $sts;
{% endif %}

{% if nginx_error_pages is iterable %}
{% for key in nginx_error_pages %}
  error_page {{ key.error_code }} /{{ key.error_page }};
{% endfor %}
{% endif %}

  location / {
    try_files $uri @{{ nginx_backend_name }};
  }

  {{ nginx_extra_locations|indent(2) }}

{% if nginx_assets_enabled %}
  location {{ nginx_assets_regex }} {
    gzip_static on;

    expires 1y;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";
  }
{% endif %}

  location @{{ nginx_backend_name }} {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_redirect off;

    proxy_pass http://{{ nginx_upstream_name }};
  }
}